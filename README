can - A simple matrix-matrix mutiplication benchmark, there are serial, intel MKL dgemm(), OpenMP, MPI and hybrid versions.
      MPI version is based on Cannon's algorithm.
      intel compiler and intel MKL library are needed.
      Input matrix is a psudorandom number, that is generated by intel MKL Mersenne Twister(MT19937)

binary names:
serial: seri
OpenMP: omp
intel MKL dgemm(): dgemm
MPI: can
hybrid: can_hyb

matrix size: imax x imax (param.f)

Some notes for MPI and hybrid version:

- imax/sqrt(np) must be an integer.
- sqrt(np) must be an integer.

performance comparison(matrix size: 4096x4096, Intel(R) Xeon(R) CPU E5-2680 0 @ 2.70GHz, 4 nodes, 4xQDR infiniband):

== serial ==
[fukuoka@rokuchan85 cannon]:25189>srun --mpi=pmi2 --cpu_bind=cores -c1 -m block:block -N1 -n1 ./seri
 serial time:   16.4637541770935        8.34797167120138      Gflops
  trace:   4194330.21842071

== MKL dgemm() (single thread) ==
[fukuoka@rokuchan85 cannon]:25191>MKL_NUM_THREADS=1 srun --mpi=pmi2 --cpu_bind=cores -c1 -m block:block -N1 -n1 ./dgemm
 dgemm time:   9.10843586921692        15.0891937370380      Gflops
  trace:   4194330.21842071
  
== MKL dgemm() (16 threads) ==
[fukuoka@rokuchan85 cannon]:25192>srun --mpi=pmi2 --cpu_bind=cores -c16 -m block:block -N1 -n1 ./dgemm
 dgemm time:  0.868834972381592        158.187639587368      Gflops
  trace:   4194330.21842071
  
== OpenMP (16 threads) ==
[fukuoka@rokuchan85 cannon]:25194>srun --mpi=pmi2 --cpu_bind=cores -c16 -m block:block -N1 -n1 ./omp
   omp time:   1.17839717864990        116.632113486104      Gflops
    trace:   4194330.21842071
    
== MPI ==
[fukuoka@rokuchan85 cannon]:25195>srun --mpi=pmi2 --cpu_bind=cores -c1 -m block:block -N4 -n64 ./can
 MPI time:  0.322515010833740        426.147462459821      Gflops
  trace:   4194330.21842072

== hybrid ==
[fukuoka@rokuchan85 cannon]:25197>srun --mpi=pmi2 --cpu_bind=cores -c4 -m block:block -N4 -n16 ./can_hyb
 MPI time:  0.738125085830688        186.200084660889      Gflops
  trace:   4194330.21842071
